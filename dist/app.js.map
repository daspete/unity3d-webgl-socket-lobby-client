{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/WebSocketLobby/WebSocketLobby.js","src/app.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","WebSocketLobby","_classCallCheck","this","unityWebSocketLobbyGameObject","config","socket","roomSocket","connectionTimeout","currentConnectionTimeout","connectionID","gameServerUrl","functionName","parameter","SendMessage","data","JSON","parse","server","socketIOScript","document","createElement","setAttribute","head","appendChild","SocketIOCheck","io","Send","setTimeout","bind","ConnectToGameServer","console","log","on","OnConnected","OnDisconnected","connect","OnConnectedToRoom","GetRoomList","GetPlayerList","OnGameStarted","OnRoomReady","roomName","emit","OnRoomCreated","stringify","roomID","OnRoomJoined","OnLeftRoom","OnGotRoomList","OnGotPlayerList","updateData","OnGotConnectionID","JoinLobby","_WebSocketLobby","window","webglSocketLobby","_WebSocketLobby2","default"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class WebSocketLobby {\r\n\r\n    constructor(){\r\n        this.unityWebSocketLobbyGameObject = 'WebGLSocketLobby';\r\n        this.config = {};\r\n\r\n        this.socket = null;\r\n        this.roomSocket = null;\r\n        this.connectionTimeout = 10;\r\n        this.currentConnectionTimeout = 0;\r\n\r\n        this.connectionID = '';\r\n\r\n        this.gameServerUrl = '';\r\n    }\r\n\r\n    Send(functionName, parameter){\r\n        SendMessage(this.unityWebSocketLobbyGameObject, functionName, parameter);\r\n    }\r\n\r\n    SetConfig(data){\r\n        this.config = JSON.parse(data);\r\n    }\r\n\r\n    Connect(server){\r\n        this.gameServerUrl = 'http://' + server + '/';\r\n\r\n        var socketIOScript = document.createElement('script');\r\n        socketIOScript.setAttribute('src', this.gameServerUrl + 'socket.io/socket.io.js');\r\n        document.head.appendChild(socketIOScript);\r\n\r\n        this.SocketIOCheck();\r\n    }\r\n\r\n    SocketIOCheck(){\r\n        if(typeof io == 'undefined'){\r\n            this.currentConnectionTimeout++;\r\n\r\n            this.currentConnectionTimeout == this.connectionTimeout\r\n                ? this.Send('SocketConnectionTimeout')\r\n                : setTimeout(this.SocketIOCheck.bind(this), 1000);\r\n\r\n            return;\r\n        }\r\n\r\n        this.ConnectToGameServer();\r\n    }\r\n\r\n    ConnectToGameServer(){\r\n        this.currentConnectionTimeout = 0;\r\n\r\n        console.log(this.gameServerUrl);\r\n\r\n        this.socket = io(this.gameServerUrl);\r\n\r\n        this.socket.on('connect', this.OnConnected.bind(this));\r\n        this.socket.on('disconnect', this.OnDisconnected.bind(this));\r\n    }\r\n\r\n    JoinLobby(){\r\n        this.roomSocket = io.connect(this.gameServerUrl + 'rooms');\r\n        this.roomSocket.on('connect', this.OnConnectedToRoom.bind(this));\r\n\r\n        this.roomSocket.on('get-room-list', this.GetRoomList.bind(this));\r\n        this.roomSocket.on('get-player-list', this.GetPlayerList.bind(this));\r\n        this.roomSocket.on('start-game', this.OnGameStarted.bind(this));\r\n        this.roomSocket.on('room-is-ready', this.OnRoomReady.bind(this));\r\n    }\r\n\r\n    CreateRoom(roomName){\r\n        this.roomSocket.emit('create-room', { roomName: roomName }, this.OnRoomCreated.bind(this));\r\n    }\r\n\r\n    OnRoomCreated(data){\r\n        this.Send('SocketRoomCreated', JSON.stringify(data));\r\n    }\r\n\r\n    JoinRoom(roomID){\r\n        this.roomSocket.emit('join-room', { roomID: roomID }, this.OnRoomJoined.bind(this));\r\n    }\r\n\r\n    OnRoomJoined(data){\r\n        this.Send('SocketRoomJoined', JSON.stringify(data));\r\n    }\r\n\r\n    LeaveRoom(roomID){\r\n        this.roomSocket.emit('leave-room', { roomID: roomID }, this.OnLeftRoom.bind(this));\r\n    }\r\n\r\n    OnLeftRoom(){\r\n        this.Send('SocketLeftRoom');\r\n    }\r\n\r\n    GetRoomList(){\r\n        this.roomSocket.emit('get-room-list', this.OnGotRoomList.bind(this));\r\n    }\r\n\r\n    OnGotRoomList(data){\r\n        this.Send('SocketGotRoomList', JSON.stringify(data));\r\n    }\r\n\r\n    GetPlayerList(roomID){\r\n        this.roomSocket.emit('get-player-list', { roomID: roomID }, this.OnGotPlayerList.bind(this));\r\n    }\r\n\r\n    OnGotPlayerList(data){\r\n        this.Send('SocketGotPlayerList', JSON.stringify(data));\r\n    }\r\n\r\n    UpdatePlayer(data){\r\n        this.roomSocket.emit('update-player', { updateData: data });\r\n    }\r\n\r\n    OnRoomReady(){\r\n        this.Send(\"SocketRoomReady\");\r\n    }\r\n\r\n    StartGame(roomID){\r\n        this.roomSocket.emit('start-game', { roomID: roomID}, this.OnGameStarted.bind(this));\r\n    }\r\n\r\n    OnGameStarted(){\r\n        this.Send(\"SocketStartedGame\");\r\n    }\r\n\r\n    OnConnected(){\r\n        this.socket.emit('set-config', { config: this.config });\r\n        this.socket.emit('get-connection-id', this.OnGotConnectionID.bind(this));\r\n    }\r\n\r\n    OnGotConnectionID(connectionID){\r\n        this.connectionID = connectionID;\r\n        this.JoinLobby();\r\n    }\r\n\r\n    OnDisconnected(){\r\n        this.Send('SocketDisconnected');\r\n    }\r\n\r\n    OnConnectedToRoom(){\r\n        this.Send('SocketConnected', this.connectionID);\r\n    }\r\n\r\n}\r\n\r\nexport default WebSocketLobby;","import WebSocketLobby from './WebSocketLobby/WebSocketLobby.js';\r\n\r\nwindow.webglSocketLobby = new WebSocketLobby();\r\n\r\n"]}